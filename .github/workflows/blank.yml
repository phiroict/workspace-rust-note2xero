name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SUBMODULE_TOKEN }}
          submodules: recursive
      - name: Checkout the main branch version if the submodules
        uses: textbook/git-checkout-submodule-action@master
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy, rustfmt
      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
      - name: Run cargo build & code check
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Run cargo tests
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set the value of the current release
        id: step_one
        run: |
            echo "APP_VERSION=$(bash get_web_version_from_toml.sh)" >> $GITHUB_ENV      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: deploy/builder/Dockerfile
          context: .
          push: true
          tags: phiroict/noted2xero_web:${{ env.APP_VERSION }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
